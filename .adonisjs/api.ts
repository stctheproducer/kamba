// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type AuthIdRedirectGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['login'], false>
}
type AuthIdCallbackGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['handleCallback'], false>
}
type AuthLogoutPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logout'], false>
}
type ApiPreferencesIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/preference.ts')['upsertPreferenceValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/preferences_controller.ts').default['update'], true>
}
type ChatIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/chat.ts')['chatIndexValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/chats_controller.ts').default['index'], true>
}
type ApiChatPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/chat.ts')['chatMessageSchema']>>
  response: MakeTuyauResponse<import('../app/controllers/chats_controller.ts').default['handleChat'], true>
}
export interface ApiDefinition {
  'auth': {
    ':provider': {
      'redirect': {
        '$url': {
        };
        '$get': AuthIdRedirectGetHead;
        '$head': AuthIdRedirectGetHead;
      };
      'callback': {
        '$url': {
        };
        '$get': AuthIdCallbackGetHead;
        '$head': AuthIdCallbackGetHead;
      };
    };
    'logout': {
      '$url': {
      };
      '$post': AuthLogoutPost;
    };
  };
  'api': {
    'preferences': {
      ':preferenceId': {
        '$url': {
        };
        '$put': ApiPreferencesIdPut;
      };
    };
    'chat': {
      '$url': {
      };
      '$post': ApiChatPost;
    };
  };
  'chat': {
    ':id?': {
      '$url': {
      };
      '$get': ChatIdGetHead;
      '$head': ChatIdGetHead;
    };
  };
}
const routes = [
  {
    params: ["*"],
    name: 'drive.fs.serve',
    path: '/uploads/*',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'home.redirect',
    path: '/',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/auth/login',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: ["provider"],
    name: 'auth.oauth.redirect',
    path: '/auth/:provider/redirect',
    method: ["GET","HEAD"],
    types: {} as AuthIdRedirectGetHead,
  },
  {
    params: ["provider"],
    name: 'auth.oauth.callback',
    path: '/auth/:provider/callback',
    method: ["GET","HEAD"],
    types: {} as AuthIdCallbackGetHead,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/auth/logout',
    method: ["POST"],
    types: {} as AuthLogoutPost,
  },
  {
    params: ["preferenceId"],
    name: 'api.preferences.update',
    path: '/api/preferences/:preferenceId',
    method: ["PUT"],
    types: {} as ApiPreferencesIdPut,
  },
  {
    params: ["id"],
    name: 'chat.chat',
    path: '/chat/:id?',
    method: ["GET","HEAD"],
    types: {} as ChatIdGetHead,
  },
  {
    params: [],
    name: 'api.chat.send',
    path: '/api/chat',
    method: ["POST"],
    types: {} as ApiChatPost,
  },
  {
    params: [],
    name: 'admin.logto.management.token',
    path: '/ubuteko/token',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
declare module '@tuyau/inertia/types' {
  type InertiaApi = typeof api
  export interface Api extends InertiaApi {}
}
